{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "datafactory1workspace"
		},
		"storage1blobadls_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'storage1blobadls'"
		},
		"storage1dbsql_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'storage1dbsql'"
		},
		"storage1blobadls_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://storage1blobadls.dfs.core.windows.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/09-Pipeline-ADLSArrayJson-SQLDBArrayJson')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ArrayFlow",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "03_Dataflow_ADLSArraysJson_SQLDBArraysJson",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"CustomerArraysJson": {},
									"CustomerCoursesSink": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-09-20T10:30:28Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/03_Dataflow_ADLSArraysJson_SQLDBArraysJson')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11-Pipeline-GetMeta-SQLDBCSV')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata CustomerCSV",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "storage1blobadls_customercsv",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Stored procedure1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata CustomerCSV').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Set variable3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@and(contains(toLower(item().Name),'customer'),endswith(toLower(item().name),'.csv' ))",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Copy data from adls csv to sqldb",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "Set variable4",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"storeSettings": {
															"type": "AzureBlobFSReadSettings",
															"recursive": true,
															"wildcardFileName": {
																"value": "@item().Name",
																"type": "Expression"
															},
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														}
													},
													"sink": {
														"type": "AzureSqlSink",
														"writeBehavior": "insert",
														"sqlWriterUseTableLock": false
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "storage1blobadls_dynamicfileNameCSV",
														"type": "DatasetReference",
														"parameters": {}
													}
												],
												"outputs": [
													{
														"referenceName": "storage1dbsqlserver_storage1dbsql_customerGabungan",
														"type": "DatasetReference",
														"parameters": {}
													}
												]
											},
											{
												"name": "Set variable4",
												"type": "SetVariable",
												"dependsOn": [],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "namaFile",
													"value": {
														"value": "@item().Name",
														"type": "Expression"
													}
												}
											}
										]
									}
								},
								{
									"name": "Set variable3",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "namaFile",
										"value": {
											"value": "@item().Name",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Stored procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Get Metadata CustomerCSV",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[apuscustgab]"
						},
						"linkedServiceName": {
							"referenceName": "storage1dbsql",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"cek": {
						"type": "String"
					},
					"cek1": {
						"type": "String"
					},
					"namaFile": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-09-29T16:43:35Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/storage1blobadls_customercsv')]",
				"[concat(variables('factoryId'), '/linkedServices/storage1dbsql')]",
				"[concat(variables('factoryId'), '/datasets/storage1blobadls_dynamicfileNameCSV')]",
				"[concat(variables('factoryId'), '/datasets/storage1dbsqlserver_storage1dbsql_customerGabungan')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/12-Pipeline-Lookup-StoredProcedure')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CariCompanyName",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "CustIDnya",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[cariCompanyName]",
								"storedProcedureParameters": {
									"pCustomerID": {
										"type": "Int32",
										"value": {
											"value": "@variables('custIDnya')",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "storage1dbsqlserver_storage1dbsql_customerGabungan1",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "CustIDnya",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "custIDnya",
							"value": 277
						}
					},
					{
						"name": "hasilLookup",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "CariCompanyName",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "hasilLookup",
							"value": {
								"value": "@activity('CariCompanyName').output.firstRow.CompanyName",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"custIDnya": {
						"type": "Integer"
					},
					"hasilLookup": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-09-29T17:16:15Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/storage1dbsqlserver_storage1dbsql_customerGabungan1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CariCust')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute Pipeline1",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Gabung",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute Pipeline2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute Pipeline1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "12-Pipeline-Lookup-StoredProcedure",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Gabung')]",
				"[concat(variables('factoryId'), '/pipelines/12-Pipeline-Lookup-StoredProcedure')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Gabung')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute Pipeline1",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "09-Pipeline-ADLSArrayJson-SQLDBArrayJson",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute Pipeline2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute Pipeline1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "11-Pipeline-GetMeta-SQLDBCSV",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/09-Pipeline-ADLSArrayJson-SQLDBArrayJson')]",
				"[concat(variables('factoryId'), '/pipelines/11-Pipeline-GetMeta-SQLDBCSV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/storage1blobadls_CustomerJson')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "storage1blobadls",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "customer.json",
						"folderPath": "json",
						"fileSystem": "data"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"customerid": {
							"type": "integer"
						},
						"customername": {
							"type": "string"
						},
						"registered": {
							"type": "boolean"
						},
						"courses": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"details": {
							"type": "object",
							"properties": {
								"mobile": {
									"type": "string"
								},
								"city": {
									"type": "string"
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/storage1blobadls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/storage1blobadls_customercsv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "storage1blobadls",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "data"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Correlationid",
						"type": "String"
					},
					{
						"name": "Operationname",
						"type": "String"
					},
					{
						"name": "Status",
						"type": "String"
					},
					{
						"name": "Eventcategory",
						"type": "String"
					},
					{
						"name": "Level",
						"type": "String"
					},
					{
						"name": "Time",
						"type": "String"
					},
					{
						"name": "Subscription",
						"type": "String"
					},
					{
						"name": "Eventinitiatedby",
						"type": "String"
					},
					{
						"name": "Resourcetype",
						"type": "String"
					},
					{
						"name": "Resourcegroup",
						"type": "String"
					},
					{
						"name": "Resource",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/storage1blobadls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/storage1blobadls_dynamicfileNameCSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "storage1blobadls",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "data"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/storage1blobadls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/storage1dbsql_Customercourses')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "storage1dbsql",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CustomerID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CustomerName",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Registered",
						"type": "bit"
					},
					{
						"name": "Courses",
						"type": "varchar"
					},
					{
						"name": "Mobile",
						"type": "varchar"
					},
					{
						"name": "City",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Customercourse"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/storage1dbsql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/storage1dbsqlserver_storage1dbsql_customerGabungan')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "storage1dbsql",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "CustomersGabung"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/storage1dbsql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/storage1dbsqlserver_storage1dbsql_customerGabungan1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "storage1dbsql",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "CustomersGabung"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/storage1dbsql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/storage1blobadls')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('storage1blobadls_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('storage1blobadls_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/storage1dbsql')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('storage1dbsql_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Cobatrigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "Gabung",
						"type": "PipelineReference"
					},
					"parameters": {}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Hour",
					"interval": 15,
					"startTime": "2024-10-01T16:04:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 50,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": []
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Gabung')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/03_Dataflow_ADLSArraysJson_SQLDBArraysJson')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "storage1blobadls_CustomerJson",
								"type": "DatasetReference"
							},
							"name": "CustomerArraysJson"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "storage1dbsql_Customercourses",
								"type": "DatasetReference"
							},
							"name": "CustomerCoursesSink"
						}
					],
					"transformations": [
						{
							"name": "FlattenCustomerCoursesArrays"
						}
					],
					"scriptLines": [
						"source(output(",
						"          customerid as integer,",
						"          customername as string,",
						"          registered as boolean,",
						"          courses as string[],",
						"          details as (mobile as string, city as string)",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     documentForm: 'arrayOfDocuments') ~> CustomerArraysJson",
						"CustomerArraysJson foldDown(unroll(courses, courses),",
						"     mapColumn(",
						"          customerid,",
						"          customername,",
						"          registered,",
						"          courses,",
						"          mobile = details.mobile,",
						"          city = details.city",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: false) ~> FlattenCustomerCoursesArrays",
						"FlattenCustomerCoursesArrays sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          CustomerID as integer,",
						"          CustomerName as integer,",
						"          Registered as boolean,",
						"          Courses as string,",
						"          Mobile as string,",
						"          City as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          CustomerID = customerid,",
						"          CustomerName = customername,",
						"          Registered = registered,",
						"          Courses = courses,",
						"          Mobile = mobile,",
						"          City = city",
						"     )) ~> CustomerCoursesSink"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/storage1blobadls_CustomerJson')]",
				"[concat(variables('factoryId'), '/datasets/storage1dbsql_Customercourses')]"
			]
		}
	]
}